{
    "contents" : "run_analysis <- function() {\n        \n        ## Read in data files from working directory using read.table()\n        ## See codebook for details regarding data files\n        X_test <- read.table(\".\\\\UCI HAR Dataset\\\\test\\\\X_test.txt\")\n        X_train <- read.table(\".\\\\UCI HAR Dataset\\\\train\\\\X_train.txt\")\n        y_test <- read.table(\".\\\\UCI HAR Dataset\\\\test\\\\y_test.txt\")\n        y_train <- read.table(\".\\\\UCI HAR Dataset\\\\train\\\\y_train.txt\")\n        subject_test <- read.table(\".\\\\UCI HAR Dataset\\\\test\\\\subject_test.txt\")\n        subject_train <- read.table(\n                \".\\\\UCI HAR Dataset\\\\train\\\\subject_train.txt\")\n        \n        ## ASSIGNMENT STEP ONE:\n        ## Combine primary data frames X_test and X_train using rbind\n        merged_data <- rbind(X_test, X_train)\n\n        ## ASSIGNMENT STEP TWO:\n        ## Extract only mean and standard deviation measurements.\n        ## I opted to identify the columns manually from the codebook \n        ## (rather than programatically) because the format made the manual \n        ## process simple and the operation only had to be performed once.\n        good_lines <- c(1:6, 41:46, 81:86, 121:126, \n                        161:166, 201:202, 214:215, 227:228,\n                        240:241, 253:254, 266:271, 345:350, \n                        424:429, 503:504, 516:517, 529:530, \n                        542:543)\n        md2 <- merged_data[,good_lines]\n        \n        ## ASSIGNMENT STEP THREE:\n        ## Create a new column of data from y_test and y_train.  Add this\n        ## column to the main data set (md3) to show the specific activity that\n        ## generated the data.  Use the replace function (and the original\n        ## data's codebook) to convert these activity integers (e.g., 1,4,5)\n        ## into descriptive activity names (e.g., WALKING, SITTING, STANDING).\n        merged_activity <- rbind(y_test, y_train)\n        md3 <- cbind(md2, merged_activity)\n        md3[67] <- replace(md3[67], md3[67]==1, \"WALKING\")\n        md3[67] <- replace(md3[67], md3[67]==2, \"WALKING_UPSTAIRS\")\n        md3[67] <- replace(md3[67], md3[67]==3, \"WALKING_DOWNSTAIRS\")\n        md3[67] <- replace(md3[67], md3[67]==4, \"SITTING\")\n        md3[67] <- replace(md3[67], md3[67]==5, \"STANDING\")\n        md3[67] <- replace(md3[67], md3[67]==6, \"LAYING\")\n        \n        ## ASSIGNMENT STEP FOUR:\n        ## Read \"features.txt\" into R and subset with good_lines to keep\n        ## only the relevant data labels.  Iterate over the resulting vector\n        ## (data_labels) to manipulate the strings into better labels.\n        ## Note: I tried to follow the lecture guidelines on variables names,\n        ## but obviously all lowercase wasn't an option with such long names.\n        ## I settled on lowercase camelback, then extended abbreviations and\n        ## removed symbols.\n        ## Two examples: \"timeBodyAccelerationMeanX\" \"frequencyBodyGyroMeanX\"\n        \n        data_labels <- read.table(\".\\\\UCI HAR Dataset\\\\features.txt\")\n        data_labels <- data_labels[good_lines,2]\n        labels2 <- sub(\"t\",\"time\", data_labels)\n        labels2 <- sub(\"f\", \"frequency\", labels2)\n        labels2 <- sub(\"Acc\", \"Acceleration\", labels2)\n        labels2 <- gsub(\"-\",\"\", labels2)\n        labels2 <- sub(\"\\\\(\\\\)\",\"\", labels2)\n        labels2 <- sub(\"mean\", \"Mean\", labels2)\n        labels2 <- sub(\"std\", \"Std\", labels2)\n        labels2 <- sub(\"timed\", \"Timed\", labels2)\n        labels2[67] <- \"activityName\"\n        names(md3) <- labels2\n        \n        \n        ## ASSIGNMENT STEP FIVE:\n        ## Read in subject data and add it to primary data frame (md#).\n        ## Use aggregate() to split data into averages for each user and\n        ## activity combination\n        subject_test <- read.table(\".\\\\UCI HAR Dataset\\\\test\\\\subject_test.txt\")\n        subject_train <- read.table(\n                \".\\\\UCI HAR Dataset\\\\train\\\\subject_train.txt\")\n        merged_subjects <- rbind(subject_test, subject_train)\n        md4 <- cbind(md3,merged_subjects)\n        \n        ## Adding variable name to new column\n        labels2[68] <- \"subject\"\n        names(md4) <- labels2\n        \n        ## Creating, re-naming, and sorting tidy data set\n        tidy_data <- aggregate(md4, by=list(md4$subject, md4$activityName),\n                               FUN=mean, na.rm=TRUE)\n        tidy_data <- tidy_data[, 1:68]\n        names(tidy_data)[names(tidy_data) == \"Group.1\"] <- \"subject\"\n        names(tidy_data)[names(tidy_data) == \"Group.2\"] <- \"activityName\"\n        ##tidy_data <- tidy_data[\n        ##        order(tidy_data$subject, tidy_data$activityName), ]\n        write.csv(tidy_data, \".\\\\result.txt\")\n        \n}",
    "created" : 1405651357522.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2004153820",
    "id" : "537C5722",
    "lastKnownWriteTime" : 1406423977,
    "path" : "C:/Users/Johnathan Taylor/Desktop/RStudio Projects/C3Project/run_analysis.R",
    "project_path" : "run_analysis.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : true,
    "type" : "r_source"
}